rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow user to read their own profile, admins can read any
      allow read: if request.auth.uid == userId || isAdmin();
      
      // Allow user to create their own profile (signup)
      allow create: if request.auth.uid == userId;

      // Allow user to update their own profile, admins can update any
      allow update: if request.auth.uid == userId || isAdmin();

      // Only admins can delete users
      allow delete: if isAdmin();
    }

    // Rules for the 'products' collection
    match /products/{productId} {
      // Allow anyone to read products
      allow read: if true;

      // Only admins can create, update, or delete products
      allow write: if isAdmin();
    }
    
    // Rules for the 'orders' collection
    match /orders/{orderId} {
      // Allow a user to create an order for themselves
      allow create: if request.auth.uid == request.resource.data.userId;

      // Allow a user to read their own orders, admins can read all
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      
      // Only admins can update orders (e.g., to change status)
      allow update: if isAdmin();

      // Only admins can delete orders
      allow delete: if isAdmin();
    }
  }
}
