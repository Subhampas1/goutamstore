rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin.
    // This is safer because it checks for auth existence first.
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can list all users.
      allow list: if isAdmin();

      // Anyone can create a user document during signup.
      allow create: if request.auth.uid != null;
      
      // A user can read/update their own document.
      // An admin can read/update any user document.
      allow read, update: if request.auth.uid == userId || isAdmin();

      // Deleting users from the client is not allowed.
      allow delete: if false;
    }

    // Rules for the 'products' collection
    match /products/{productId} {
      // Anyone can view the products.
      allow read, list: if true;

      // Only admins can create, update, or delete products.
      allow create, update, delete: if isAdmin();
    }

    // Rules for the 'orders' collection
    match /orders/{orderId} {
      // A user can create their own order.
      allow create: if request.auth.uid == request.resource.data.userId;

      // Admins can list all orders. Users can read their own orders.
      allow list: if isAdmin();
      allow read: if (request.auth != null && request.auth.uid == resource.data.userId) || isAdmin();
      
      // Updating or deleting orders from the client is not allowed.
      allow update, delete: if false;
    }
  }
}
