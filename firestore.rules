
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      // Check if the user document exists and if the role is 'admin'
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Products can be read by anyone, but only modified by admins
    match /products/{productId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin();
    }

    // Users can create their own profile. They can only read/update their own data.
    // Admins can read/write any user profile.
    match /users/{userId} {
      allow read, update: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow create: if request.auth != null; // Allows new user creation
      allow delete: if request.auth != null && isAdmin(); // Only admins can delete users
    }

    // Orders can be created by the user who owns them.
    // Users can read their own orders.
    // Admins can read and update all orders.
    match /orders/{orderId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userId == resource.data.userId || isAdmin());
      allow update, delete: if request.auth != null && isAdmin();
    }
  }
}
